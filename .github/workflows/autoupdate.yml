name: Update Rules
on: 
  schedule:
    - cron: '30 0,12 * * *'
  workflow_dispatch:
  repository_dispatch:
    types: [Manual-Update]
  watch:
    types: [started]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SCKEY: ${{ secrets.SCKEY }}
  PUSH_PUSH: ${{ secrets.PUSH_PUSH }}
  GITHUBTOKEN: ${{ secrets.GITHUBTOKEN }}
  TG_TOKEN: ${{ secrets.TG_TOKEN }}
  CHAT_ID: ${{ secrets.CHAT_ID }}
  REPO_NAME: ${{ github.event.repository.name }}
  OWR_NAME: ${{ github.actor }}
  NETLIFY_API: ${{ secrets.NETLIFY_API }}
  RENDER_API_API: ${{ secrets.RENDER_API_API }}

jobs:
  update-rules:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: Git fetch 
        run: git pull -f

      - name: Update rules
        run: |
          mkdir -p rules && cd rules
          rm -f *.txt *.conf

          # 1. 下载并简单过滤「规则地址1」-> 生成 adblock 格式
          wget -O rules.txt https://raw.githubusercontent.com/qq5460168/666/master/rules.txt
          sed -i '/##/d; /#\$/d; /#@#/d; /#\?#/d; /#\$\?#/d; /#@%#/d; /#@\?#/d; /#@\$/d; /#@\$\?#/d; /#%#/d' rules.txt

          # 2. 下载「DNS 域名地址」-> 生成 hosts / dnsmasq
          wget -O dns.txt https://raw.githubusercontent.com/qq5460168/666/master/dns.txt
          sed -i '/!/d; /#/d; /##/d; /###/d; s/^+\\.//' dns.txt

          cur_date=$(TZ=UTC-8 date +'%Y-%m-%d %H:%M:%S')
          domains_total=$(wc -l < dns.txt)

          cat > title.header <<EOF
# Version: ${cur_date}
# Homepage: https://github.com/${{ github.repository }}
# Total count: ${domains_total}
EOF

          # hosts
          awk '{print "0.0.0.0\t"$0}' dns.txt > hosts.part
          cat title.header hosts.part > ad-hosts.txt

          # dnsmasq
          awk '{print "address=/"$0"/"}' dns.txt > dnsmasq.part
          cat title.header dnsmasq.part > ad-dnsmasq.conf

          # 把成品搬到根目录
          cp -f rules.txt ad-hosts.txt ad-dnsmasq.conf ../
          cd .. && rm -rf rules

      - name: Git push assets to Github
        continue-on-error: false
        run: |
          git init
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"
          git branch -m main
          git add .
          git checkout --orphan new_branch
          git add -A
          git commit -am "Updated at $(TZ=UTC-8 date +'%Y-%m-%d %H:%M:%S')"
          git branch -D main 
          git branch -m main
          git push --force --set-upstream origin main

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 2
